version: '3.8'

services:
  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    networks:
      - back-tier
      - poll-tier
    restart: unless-stopped

  db:
    image: postgres:15.2-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - back-tier
      - result-tier
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped
  poll:
    build: ./poll
    ports:
      - '5000:80'
    networks:
      - poll-tier
    depends_on:
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
    restart: unless-stopped

  worker:
    build: ./worker
    networks:
      - back-tier
    depends_on:
      - redis
      - db
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped

  result:
    build: ./result
    ports:
      - '5001:80'
    networks:
      - result-tier
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped

networks:
  poll-tier:
  result-tier:
  back-tier:
volumes:
  db-data:
